version: "3.8"

services:
  app:
    container_name: app_server
    build:
      context: .
      dockerfile: Dockerfile.app
    ports:
      - 8000:8000
      - 5678:5678
    volumes:
      - .:/usr/app
    environment:
      - NOTER_APP_PG_HOST=db
      - NOTER_APP_PG_PASSWORD=pass12345
      - NOTER_APP_PG_USER=postgres
      - NOTER_APP_PG_DB=postgres
      - NOTER_APP_PG_PORT=5432
      - NOTER_APP_S3_ENDPOINT=http://localstack:4566
      - NOTER_APP_S3_BUCKET_NAME=noter-app-bucket
      - NOTER_APP_SQS_ENDPOINT=http://localstack:4566
      - NOTER_APP_SQS_QUEUE_NAME=s3-messages
      - NOTER_APP_SNS_ENDPOINT=http://localstack:4566
      - NOTER_APP_SNS_TOPIC=s3-events
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
    depends_on:
      - db
      - localstack
    restart: unless-stopped
    networks:
      - noter_app_network

  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    container_name: celery_worker
    volumes:
      - .:/usr/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NOTER_APP_S3_ENDPOINT=http://localstack:4566
      - NOTER_APP_S3_BUCKET_NAME=noter-app-bucket
      - NOTER_APP_SQS_ENDPOINT=http://localstack:4566
      - NOTER_APP_SQS_QUEUE_NAME=s3-messages
      - NOTER_APP_SNS_ENDPOINT=http://localstack:4566
      - NOTER_APP_SNS_TOPIC=s3-events
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
    command:
      ["poetry", "run", "celery", "-A", "celery_worker", "worker", "-l", "info"]
    depends_on:
      - redis
      - db
      - app
    restart: unless-stopped
    networks:
      - noter_app_network

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile.celery
    container_name: celery_beat_worker
    volumes:
      - .:/usr/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NOTER_APP_S3_ENDPOINT=http://localstack:4566
      - NOTER_APP_S3_BUCKET_NAME=noter-app-bucket
      - NOTER_APP_SQS_ENDPOINT=http://localstack:4566
      - NOTER_APP_SQS_QUEUE_NAME=s3-messages
      - NOTER_APP_SNS_ENDPOINT=http://localstack:4566
      - NOTER_APP_SNS_TOPIC=s3-events
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
    command:
      ["poetry", "run", "celery", "-A", "celery_worker", "beat", "-l", "info"]
    depends_on:
      - redis
      - db
      - celery
    restart: unless-stopped
    networks:
      - noter_app_network

  flower:
    image: mher/flower
    container_name: celery_flower
    ports:
      - 5555:5555
    command: ["celery", "--broker", "redis://redis:6379/0", "flower"]
    depends_on:
      - celery
      - redis
      - db
    restart: unless-stopped
    networks:
      - noter_app_network

  db:
    image: postgres:alpine3.17
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=pass12345
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    restart: always
    networks:
      - noter_app_network

  redis:
    image: redis
    container_name: redis_broker
    expose:
      - 6379
    restart: always
    networks:
      - noter_app_network

  localstack:
    image: localstack/localstack
    ports:
      - "4566:4566"
      - "443:443"
    environment:
      - GATEWAY_LISTEN=0.0.0.0:4566
      - PERSISTENCE=1
      - DEBUG=0
      - SERVICES=s3,sqs,sns
      - S3_SKIP_SIGNATURE_VALIDATION=0
    volumes:
      - ./data:/state
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - noter_app_network

volumes:
  pg_data:
  celery_beat_data:

networks:
  noter_app_network:
